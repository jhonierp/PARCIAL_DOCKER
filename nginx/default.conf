server {
    listen 80;
    server_name localhost;

    # Logs para debugging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # IMPORTANTE: Manejar archivos estáticos de React ANTES que otras rutas
    location /static/ {
        proxy_pass http://empresa_frontend:3000;  # CORREGIDO: usar nombre real del contenedor
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Headers para archivos estáticos
        proxy_set_header Cache-Control "public, max-age=3600";
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Ruta para el frontend React (CRUD de usuarios)
    # Redirigir /users a /users/
    location = /users {
        return 301 /users/;
    }

    # Manejar /users/ y todo lo que sigue
    location /users/ {
        proxy_pass http://empresa_frontend:3000/;  # CORREGIDO: usar nombre real del contenedor
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Ruta para la API Node.js
    location /api/ {
        # Reescribir la URL para eliminar /api del path
        rewrite ^/api/(.*)$ /$1 break;
        
        # Proxy hacia el backend Node.js
        proxy_pass http://nodejs_api:3000;  # CORREGIDO: usar nombre real del contenedor
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Manejo específico para archivos de React (manifest, favicon, etc.)
    location ~ \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://empresa_frontend:3001;  # CORREGIDO: usar nombre real del contenedor
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # Headers para archivos estáticos
        expires 1h;
        add_header Cache-Control "public, immutable";
    }

    # Ruta raíz para WordPress (DEBE IR AL FINAL)
    location / {
        proxy_pass http://wordpress_site:80;  # CORREGIDO: usar nombre real del contenedor
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Headers específicos para WordPress
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Página de estado de Nginx
    location /nginx-status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 172.0.0.0/8;  # Permitir desde Docker networks
        deny all;
    }

    # Manejo de errores
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}